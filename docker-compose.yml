version: '3'
services:
#  go-gin:
#    container_name: gin
#    build:
#      context: ./go-gin
#      dockerfile: Dockerfile
#    volumes:
#      - ./go-gin:/app
#    ports:
#      - "8080:8080"
#  #    environment:
#  #      - GIN_MODE=release
#
#  go-grpc-server:
#    container_name: go-grpc-server
#    build:
#      context: ./go-grpc
#      dockerfile: Dockerfile
#    volumes:
#      - ./go-grpc:/app
#    ports:
#      - "50051:50051"
#
#  php-hyperf:
#    container_name: php-hyperf
#    image: hyperf-skeleton
#    build:
#      context: ./php-hyperf
#    volumes:
#      - ./php-hyperf:/opt/www
#      - /opt/www/runtime
#    ports:
#      - "9501:9501"
#    environment:
#      - APP_ENV=dev
#      - SCAN_CACHEABLE=false
#      #      - APP_ENV=prod
#      #      - SCAN_CACHEABLE=true
#      - JWT_SECRET=my-secret-key111
#      - JWT_ISSUER=test.local
#
#  gserver:
#    container_name: php-grpc-server
#    image: hyperf-skeleton
#    build:
#      context: ./php-hyperf
#    volumes:
#      - ./php-hyperf:/opt/www
#      - /opt/www/runtime
#    ports:
#      - "9503:9503"
#    environment:
#      - APP_ENV=dev
#      - SCAN_CACHEABLE=false
#
#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"
#
#  zoo1:
#    image: confluentinc/cp-zookeeper:7.3.2
#    hostname: zoo1
#    container_name: zoo1
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_SERVER_ID: 1
#      ZOOKEEPER_SERVERS: zoo1:2888:3888
#
#  kafka1:
#    image: confluentinc/cp-kafka:7.3.2
#    hostname: kafka1
#    container_name: kafka1
#    ports:
#      - "9092:9092"
#      - "29092:29092"
#      - "9999:9999"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_JMX_PORT: 9999
#      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
#      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
#    depends_on:
#      - zoo1

  bbccdd:
    container_name: ccbbdd
    build:
      context: ./ccbbdd
      dockerfile: Dockerfile
    volumes:
      - ./ccbbdd:/app
    ports:
      - "3000:4444"
    depends_on:
      wait-for-db:
        condition: service_completed_successfully
    environment:
      DB_DSN: "ccbbdd:ccbbdd@tcp(mysql:3306)/ccbbdd?parseTime=true"
#    command: make run
    command: tail -f /dev/null

  mysql:
    image: mysql:latest
    volumes:
      - "./.mysql-data/db:/var/lib/mysql"
    #    ports:
    #      - "3306:3306"
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: ccbbdd
      MYSQL_DATABASE: ccbbdd
      MYSQL_USER: ccbbdd
      MYSQL_PASSWORD: ccbbdd

  wait-for-db:
    image: atkrad/wait4x
    depends_on:
      - mysql
    command: tcp mysql:3306 -t 30s -i 250ms


#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    ports:
#      - "8081:8081"
#    environment:
#      - REDIS_HOSTS=local:redis:6379


networks:
  default:
    name: hyperf-skeleton